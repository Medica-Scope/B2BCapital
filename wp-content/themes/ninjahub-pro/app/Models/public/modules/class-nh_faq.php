<?php

/**
 * @Filename: class-nh_faq.php
 * @Description:
 * @User: NINJA MASTER - Mustafa Shaaban
 * @Date: 5/10/2023
 */


namespace NH\APP\MODELS\FRONT\MODULES;

use NH\APP\CLASSES\Nh_Module;
use NH\APP\CLASSES\Nh_Post;
use WP_Post;


/**
 * Description...
 *
 * @class Nh_Faq
 * @version 1.0
 * @since 1.0.0
 * @package NinjaHub
 * @author Mustafa Shaaban
 */
class Nh_Faq extends Nh_Module
{
    public array $meta_data = [
        'cover',
    ];
    public array $taxonomy  = [];

    public function __construct()
    {
        parent::__construct('faq');
    }

    /**
     * Description...
     *
     * @param \WP_Post $post
     * @param array    $meta_data
     *
     * @version 1.0
     * @since 1.0.0
     * @package NinjaHub
     * @author Mustafa Shaaban
     * @return \NH\APP\CLASSES\Nh_Post
     */
    public function convert(WP_Post $post, array $meta_data = []): Nh_Post
    {
        return parent::convert($post, $this->meta_data); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     */
    protected function actions($module_name): void
    {
        // TODO: Implement actions() method.
    }

    /**
     * @inheritDoc
     */
    protected function filters($module_name): void
    {
        // TODO: Implement filters() method.
    }

     /**
         * Retrieves all posts of the module.
         *
         * @param array  $status The post statuses to retrieve.
         * @param int    $limit The maximum number of posts to retrieve.
         * @param string $orderby The field to order the posts by.
         * @param string $order The order of the posts (ASC or DESC).
         * @param array  $not_in The post IDs to exclude from the results.
         * Override function get_all() Nh_Post
         * @return array An array of Nh_Post objects representing the retrieved posts.
         * @since 1.0.0
         * @package NinjaHub
         * @version 1.0
         */
        public function get_all(array $status = [ 'any' ], int $limit = 10, string $orderby = 'ID', string $order = 'DESC', array $not_in = [ '0' ], array $tax_query = ['']): array
        {
            $posts     = new \WP_Query([
                "post_type"      => $this->module,
                "post_status"    => $status,
                "posts_per_page" => $limit,
                "orderby"        => $orderby,
                "not__in"        => $not_in,
                "order"          => $order,
                "tax_query"      => [
                    'relation',
                    $tax_query
                ]
            ]);
            $Nh_Posts = [];

            foreach ($posts->get_posts() as $post) {
                $Nh_Posts[] = $this->convert($post, $this->meta_data);
            }

            return $Nh_Posts;
        }
}
