<?php
    /**
     * @Filename: class-nh_opportunity_acquisition.php
     * @Description:
     * @User: NINJA MASTER - Mustafa Shaaban
     * @Date: 5/10/2023
     */


    namespace NH\APP\MODELS\FRONT\MODULES;

    use NH\APP\CLASSES\Nh_Module;
    use NH\APP\CLASSES\Nh_Post;
    use NH\APP\CLASSES\Nh_User;
    use NH\APP\HELPERS\Nh_Ajax_Response;
    use NH\APP\HELPERS\Nh_Cryptor;
    use NH\Nh;
    use WP_Post;


    /**
     * Description...
     *
     * @class Nh_Opportunity_Acquisition
     * @version 1.0
     * @since 1.0.0
     * @package NinjaHub
     * @author Mustafa Shaaban
     */
    class Nh_Opportunity_Acquisition extends Nh_Module
    {
        public array $meta_data = [
            'opportunity',
            'acquisitions_stage',
        ];
        public array $taxonomy  = [];

        public function __construct()
        {
            parent::__construct('opportunity-acquisition');
        }

        /**
         * Description...
         *
         * @param \WP_Post $post
         * @param array    $meta_data
         *
         * @version 1.0
         * @since 1.0.0
         * @package NinjaHub
         * @author Mustafa Shaaban
         * @return \NH\APP\CLASSES\Nh_Post
         */
        public function convert(WP_Post $post, array $meta_data = []): Nh_Post
        {
            return parent::convert($post, $this->meta_data); // TODO: Change the autogenerated stub
        }

        /**
         * @inheritDoc
         */
        protected function actions($module_name): void
        {
        }

        /**
         * @inheritDoc
         */
        protected function filters($module_name): void
        {
            // TODO: Implement filters() method.
        }

        public function get_dashboard_sidebar_acquisitions(bool $current = FALSE): array
        {
            global $user_ID;

            $args = [
                'post_type'   => $this->module,
                'post_status' => 'publish',
                'orderby'     => 'ID',
                'order'       => 'DESC',
                'meta_query'  => [
                    [
                        'key'     => 'acquisitions_stage',
                        'value'   => 'closed',
                        'compare' => '=',
                    ],
                ],
            ];

            if ($current) {
                $args['author'] = $user_ID;
                unset($args['meta_query']);
            }

            $acquisitions = new \WP_Query($args);

            $Nh_acquisitions = [];

            foreach ($acquisitions->get_posts() as $acquisition) {
                $single_acquisition              = $this->convert($acquisition, $this->meta_data);
                $opportunity_obj                 = new Nh_Opportunity();
                $single_acquisition->opportunity = $opportunity_obj->get_by_id((int)$single_acquisition->meta_data['opportunity']);
                $Nh_acquisitions[]               = $single_acquisition;
            }

            return $Nh_acquisitions;
        }

        public function get_profile_acquisitions(bool $current = FALSE): array
        {
            global $user_ID;

            $args = [
                'post_type'   => $this->module,
                'post_status' => 'publish',
                'orderby'     => 'ID',
                'order'       => 'DESC',
                'meta_query'  => [
                    [
                        'key'     => 'acquisitions_stage',
                        'value'   => 'closed',
                        'compare' => '=',
                    ],
                ],
            ];

            if ($current) {
                $args['author'] = $user_ID;
                unset($args['meta_query']);
            }

            $acquisitions = new \WP_Query($args);

            $Nh_acquisitions = [];

            foreach ($acquisitions->get_posts() as $acquisition) {
                $single_acquisition              = $this->convert($acquisition, $this->meta_data);
                $opportunity_obj                 = new Nh_Opportunity();
                $single_acquisition->opportunity = $opportunity_obj->get_by_id((int)$single_acquisition->meta_data['opportunity']);
                $Nh_acquisitions[]               = $single_acquisition;
            }

            return $Nh_acquisitions;
        }

    }
